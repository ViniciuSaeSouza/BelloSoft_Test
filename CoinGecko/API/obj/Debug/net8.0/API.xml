<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="T:API.Controllers.CryptoController">
            <summary>
            API controller for cryptocurrency operations
            </summary>
        </member>
        <member name="M:API.Controllers.CryptoController.#ctor(Domain.Interfaces.ICryptoService,Domain.Interfaces.ICoinGeckoService)">
            <summary>
            Constructor for CryptoController
            </summary>
            <param name="cryptoService">Service for crypto operations</param>
            <param name="coinGeckoService">Service for CoinGecko API operations</param>
        </member>
        <member name="M:API.Controllers.CryptoController.GetCoins(System.Int32,System.Int32)">
            <summary>
            Retrieves a paginated list of available cryptocurrencies from CoinGecko
            </summary>
            <param name="page">Page number (default: 1)</param>
            <param name="pageSize">Number of items per page (default: 50)</param>
            <returns>A paginated list of cryptocurrency coins</returns>
            <response code="200">Returns the list of coins</response>
            <response code="400">If the request parameters are invalid</response>
            <response code="404">If no coins were found</response>
            <response code="502">If there was an error communicating with CoinGecko API</response>
        </member>
        <member name="M:API.Controllers.CryptoController.GetCurrencies(System.Int32,System.Int32)">
            <summary>
            Retrieves a paginated list of supported currencies from CoinGecko
            </summary>
            <param name="page">Page number (default: 1)</param>
            <param name="pageSize">Number of items per page (default: 20)</param>
            <returns>A paginated list of supported currencies</returns>
            <response code="200">Returns the list of currencies</response>
            <response code="400">If the request parameters are invalid</response>
            <response code="404">If no currencies were found</response>
            <response code="502">If there was an error communicating with CoinGecko API</response>
        </member>
        <member name="M:API.Controllers.CryptoController.GetPrice(System.String,System.String)">
            <summary>
            Retrieves current price information for a specific cryptocurrency and currency
            </summary>
            <param name="cryptoId">The ID of the cryptocurrency (default: bitcoin)</param>
            <param name="currency">The currency to display the price in (default: usd)</param>
            <returns>Current price information for the specified cryptocurrency</returns>
            <response code="200">Returns the cryptocurrency information</response>
            <response code="400">If the request parameters are invalid</response>
            <response code="404">If the cryptocurrency was not found</response>
        </member>
        <member name="M:API.Controllers.CryptoController.GetHistoryStats(System.String,System.String)">
            <summary>
            Retrieves historical price statistics for a specific cryptocurrency and currency
            </summary>
            <param name="cryptoId">The ID of the cryptocurrency (default: bitcoin)</param>
            <param name="currency">The currency to display the prices in (default: usd)</param>
            <returns>Historical price statistics for the specified cryptocurrency</returns>
            <response code="200">Returns the historical statistics</response>
            <response code="400">If the request parameters are invalid</response>
            <response code="404">If no historical data was found</response>
            <response code="500">If there was an error processing the request</response>
        </member>
        <member name="T:API.Models.SwaggerModels">
            <summary>
            Response models for Swagger documentation
            </summary>
        </member>
        <member name="T:API.Models.SwaggerModels.ErrorResponse">
            <summary>
            Error response model
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.ErrorResponse.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.ErrorResponse.Timestamp">
            <summary>
            Timestamp when the error occurred
            </summary>
        </member>
        <member name="T:API.Models.SwaggerModels.CryptoPriceResponse">
            <summary>
            Crypto price information model
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CryptoPriceResponse.Id">
            <summary>
            Unique identifier
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CryptoPriceResponse.CryptoId">
            <summary>
            Cryptocurrency ID (e.g. bitcoin, ethereum)
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CryptoPriceResponse.Currency">
            <summary>
            Currency code (e.g. usd, eur)
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CryptoPriceResponse.Price">
            <summary>
            Current price in the specified currency
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CryptoPriceResponse.Change24hrPercentage">
            <summary>
            24-hour price change percentage
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CryptoPriceResponse.RetrievedAt">
            <summary>
            Timestamp when the data was retrieved
            </summary>
        </member>
        <member name="T:API.Models.SwaggerModels.CoinResponse">
            <summary>
            Cryptocurrency model
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CoinResponse.Id">
            <summary>
            Cryptocurrency ID
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CoinResponse.Symbol">
            <summary>
            Cryptocurrency symbol
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CoinResponse.Name">
            <summary>
            Cryptocurrency name
            </summary>
        </member>
        <member name="T:API.Models.SwaggerModels.CurrencyResponse">
            <summary>
            Currency model
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CurrencyResponse.Symbol">
            <summary>
            Currency symbol/code
            </summary>
        </member>
        <member name="T:API.Models.SwaggerModels.PaginatedResponse`1">
            <summary>
            Paginated result wrapper
            </summary>
            <typeparam name="T">Type of items in the result</typeparam>
        </member>
        <member name="P:API.Models.SwaggerModels.PaginatedResponse`1.Items">
            <summary>
            List of items
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.PaginatedResponse`1.Page">
            <summary>
            Current page number
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.PaginatedResponse`1.PageSize">
            <summary>
            Number of items per page
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.PaginatedResponse`1.TotalCount">
            <summary>
            Total number of items across all pages
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.PaginatedResponse`1.TotalPages">
            <summary>
            Total number of pages
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.PaginatedResponse`1.HasNext">
            <summary>
            Whether there is a next page
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.PaginatedResponse`1.HasPrevious">
            <summary>
            Whether there is a previous page
            </summary>
        </member>
        <member name="T:API.Models.SwaggerModels.CryptoHistoryStatsResponse">
            <summary>
            Cryptocurrency historical statistics
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CryptoHistoryStatsResponse.CryptoId">
            <summary>
            Cryptocurrency ID
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CryptoHistoryStatsResponse.Currency">
            <summary>
            Currency code
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CryptoHistoryStatsResponse.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CryptoHistoryStatsResponse.HighestPrice">
            <summary>
            Highest price
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CryptoHistoryStatsResponse.LowestPrice">
            <summary>
            Lowest price
            </summary>
        </member>
        <member name="P:API.Models.SwaggerModels.CryptoHistoryStatsResponse.StandardDeviation">
            <summary>
            Standard deviation of prices
            </summary>
        </member>
    </members>
</doc>
